#!/bin/bash

[ -f config/kanotix ] && . config/kanotix

usage()
{
cat <<eof

Additional Options for Kanotix:
            [--kanotix-flavours FLAVOUR|"FLAVOURS"]
	    [--include-nvidia true|false]
	    [--tmpfs true|false]
	    [--tmpfs-options OPTIONS]

eof
}

write_kanotix_config()
{
[ -z "${LB_KANOTIX_FLAVOURS}" ] && LB_KANOTIX_FLAVOURS="kanotix-master"
[ -z "${LB_KANOTIX_NVIDIA}" ] && LB_KANOTIX_NVIDIA="true"
[ -z "${LB_KANOTIX_TMPFS}" ] && [ -d tmpfs ] && LB_KANOTIX_TMPFS="true"
[ -z "${LB_KANOTIX_TMPFS}" ] && LB_KANOTIX_TMPFS="false"
[ -z "${LB_KANOTIX_TMPFS_OPTIONS}" ] && [ -f tmpfs/options ] && LB_KANOTIX_TMPFS_OPTIONS="$(<tmpfs/options)"
[ -z "${LB_KANOTIX_TMPFS_OPTIONS}" ] && LB_KANOTIX_TMPFS_OPTIONS="defaults"
cat >config/kanotix << EOF
# config/kanotix - additional options for Kanotix

# \$LB_KANOTIX_FLAVOURS: select Kanotix-packageslists
# (Default: kanotix-master)
LB_KANOTIX_FLAVOURS="${LB_KANOTIX_FLAVOURS}"

# \$LB_KANOTIX_NVIDIA: include NVidia-Drivers into chroot
# (Default: ${LB_KANOTIX_NVIDIA})
LB_KANOTIX_NVIDIA="${LB_KANOTIX_NVIDIA}"

# \$LB_KANOTIX_TMPFS: use tmpfs to build
# (Default: ${LB_KANOTIX_TMPFS})
LB_KANOTIX_TMPFS="${LB_KANOTIX_TMPFS}"

# \$LB_KANOTIX_TMPFS_OPTIONS: options for tmpfs
# (Default: ${LB_KANOTIX_TMPFS_OPTIONS})
LB_KANOTIX_TMPFS_OPTIONS="${LB_KANOTIX_TMPFS_OPTIONS}"

EOF
grep -q ". config/kanotix" config/all 2>/dev/null || echo ". config/kanotix" >> config/all
}

# process Kanotix config values
unset args; i=1
while [ "$1" ]
do
        case "$1" in
        --kanotix-flavour*)
                LB_KANOTIX_FLAVOURS="$2"
                shift
                while [ "$2" -a "${2:0:1}" != "-" ]
                do
                        LB_KANOTIX_FLAVOURS="$LB_KANOTIX_FLAVOURS $2"
                        shift
                done
                ;;
	--include-nvidia)
		LB_KANOTIX_NVIDIA="$2"
		shift
		;;
	--tmpfs)
		LB_KANOTIX_TMPFS="$2"
		shift
		;;
	--tmpfs-options)
		LB_KANOTIX_TMPFS_OPTIONS="$2"
		shift
		;;
        --help|-h)
		lb config noauto --help
                usage
		exit 1
                ;;
        *)
                args[$i]="$1"
		((i++))
                ;;
        esac
        shift
done

set -- "${args[@]}"

write_kanotix_config

